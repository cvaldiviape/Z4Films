apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-mongo-client
spec:
  replicas: 1
  selector:
    matchLabels: # define las etiquetas que el Deployment usará para identificar los Pods que administra.
      app: db-mongo-client # El Deployment buscará Pods con esta etiqueta.
  template: # plantilla del POD - aqui se configura el POD
    metadata:
      labels: # define las etiquetas que tendrán los Pods creados por el Deployment.
        app: db-mongo-client # Etiqueta asignada a los Pods creados por este template.
    spec: # Define las especificaciones generales para los Pods gestionados por este Deployment.
      containers:
      - name: mongo-client
        image: mongo-express:latest
        ports:
        - containerPort: 8081 # Puerto interno del contenedor
        env:
        - name: ME_CONFIG_MONGODB_ADMINUSERNAME # user mongo-server (se usa de forma implicta cuando levanto el mongo-cliente)
          value: admin
        - name: ME_CONFIG_MONGODB_ADMINPASSWORD
          value: secret
        - name: ME_CONFIG_BASICAUTH_USERNAME # user mongo-client (la que uso)
          value: melek
        - name: ME_CONFIG_BASICAUTH_PASSWORD
          value: bloodyroar
        - name: ME_CONFIG_MONGODB_SERVER
          value: db-mongo-server # Estás indicando al contenedor mongo-express que se conecte al servidor MongoDB a través del servicio "svc-db-mongo-server.yml"

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/

# QUE ES UN DEPLOYMENT?
# - es un objeto de alto nivel que gestiona la implementación y el ciclo de vida de un conjunto de Pods en el clúster. 
# - su objetivo principal es garantizar que las aplicaciones se ejecuten continuamente y que siempre haya el número correcto de réplicas funcionando de forma estable.