services:
  # ----------------- kafka ----------------- #
  zookeeper:
    container_name: z4-kf-zookeeper
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    container_name: z4-kf-kafka
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    container_name: z4-kf-kafdrop
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - "19000:9000"
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
      TZ: America/Lima 

  # --------------- databases -------------- #
  postgres-server:
    container_name: z4-db-postgres-server
    image: postgres:15
    restart: always
    depends_on:
      - kafdrop
    ports:
      - "5532:5432"
    environment:
      - POSTGRES_DB=root
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=secret
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init/postgres-init.sql:/docker-entrypoint-initdb.d/postgres-init.sql:ro
    networks:
      - broker-kafka
  
  postgres-client:
    container_name: z4-db-postgres-client
    image: dpage/pgadmin4:latest
    restart: always
    depends_on:
      - postgres-server
    ports:
      - "84:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=secret
    networks:
      - broker-kafka
  
  mongo-server:
    container_name: z4-db-mongo-server
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    depends_on:
      - postgres-client
    ports:
      - "29017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - broker-kafka

  mongo-client:
    container_name: z4-db-mongo-client
    image: mongo-express:latest
    restart: always
    depends_on:
      - mongo-server
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
      - ME_CONFIG_BASICAUTH_USERNAME=melek
      - ME_CONFIG_BASICAUTH_PASSWORD=bloodyroar
      - ME_CONFIG_MONGODB_SERVER=mongo-server
    ports:
      - "8081:8081"
    networks:
      - broker-kafka
  
  # --------------- platform -------------- #
  eureka-server:
    container_name: z4-pt-eureka
    image: z4-pt-eureka:v1
    restart: always
    ports:
      - "8761:8761"
    networks:
      - broker-kafka
  
  keycloak:
    container_name: z4-pt-keycloak
    image: cvaldiviape/z4movies-keycloak:latest
    ports:
      - "9090:8080"
    networks:
      - broker-kafka

volumes:
  postgres_data:
    name: postgres_data
  mongodb_data:
    name: mongodb_data

networks:
  broker-kafka:
    driver: bridge